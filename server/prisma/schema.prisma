// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// model
model User {
  userId    Int       @id @default(autoincrement())
  firstName String    @db.VarChar(100)
  lastName  String    @db.VarChar(100)
  Role      Role      @default(USER)
  DOB       DateTime  @db.Date
  email     String    @unique
  address   String
  password  String    @db.VarChar(12)
  account   Account[]
}

model Account {
  accountId       Int           @id @default(autoincrement())
  user            User          @relation(fields: [userId], references: [userId])
  userId          Int
  Type            AccType       @default(SAVINGS)
  balance         Float         @default(100.0) // Minimum balance on creation by default
  fromTransaction Transaction[] @relation("Debit")
  toTransaction   Transaction[] @relation("Credit")
}

model Transaction {
  transactionId Int      @id @default(autoincrement())
  amount        Float
  fromAccount   Account  @relation("Debit", fields: [fromAccountId], references: [accountId])
  fromAccountId Int
  toAccount     Account  @relation("Credit", fields: [toAccountId], references: [accountId])
  toAccountId   Int
  mode          MOP      @default(CASH)
  time          DateTime @default(now())
  status        Status   @default(PENDING)
  remark        String   @db.VarChar(300)
}

enum AccType {
  SAVINGS
  CURRENT
}

enum Status {
  PENDING
  SUCCESS
  FAILED
}

enum MOP {
  CASH
  CARD
  NETBANKING
  NEFT
}

enum Role {
  USER
  ADMIN
}
