{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u9280\\u884C\\\\client\\\\src\\\\user-panel\\\\transaction.js\";\nimport React from 'react';\nimport './transaction.css'; // Make sure to include your styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionDisplay = ({\n  transactions\n}) => {\n  const getTransactionStyle = transaction => {\n    if (transaction.status === 'FAILED') {\n      return {\n        color: 'red'\n      }; // Red for failed transactions\n    } else if (transaction.toAccountId) {\n      return {\n        color: 'green'\n      }; // Green for credit transactions\n    } else if (transaction.fromAccountId) {\n      return {\n        color: 'blue'\n      }; // Blue for debit transactions\n    }\n    return {};\n  };\n  const renderTransaction = transaction => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: getTransactionStyle(transaction),\n      className: \"transaction-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transaction-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: new Date(transaction.time).toLocaleDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: transaction.remark\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: transaction.mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: transaction.amount.toLocaleString(undefined, {\n          style: 'currency',\n          currency: 'INR'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, transaction.transactionId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  };\n  const allTransactions = [...transactions.creditTransactions, ...transactions.debitTransactions, ...transactions.selfTransactions, ...transactions.failedTransactions];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transaction-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), allTransactions.sort((a, b) => new Date(b.time) - new Date(a.time)).map(renderTransaction)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c = TransactionDisplay;\nexport default TransactionDisplay;\nvar _c;\n$RefreshReg$(_c, \"TransactionDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TransactionDisplay","transactions","getTransactionStyle","transaction","status","color","toAccountId","fromAccountId","renderTransaction","style","className","children","Date","time","toLocaleDateString","fileName","_jsxFileName","lineNumber","columnNumber","remark","mode","amount","toLocaleString","undefined","currency","transactionId","allTransactions","creditTransactions","debitTransactions","selfTransactions","failedTransactions","sort","a","b","map","_c","$RefreshReg$"],"sources":["D:/銀行/client/src/user-panel/transaction.js"],"sourcesContent":["import React from 'react';\r\nimport './transaction.css'; // Make sure to include your styles\r\n\r\nconst TransactionDisplay = ({ transactions }) => {\r\n  const getTransactionStyle = (transaction) => {\r\n    if (transaction.status === 'FAILED') {\r\n      return { color: 'red' }; // Red for failed transactions\r\n    } else if (transaction.toAccountId) {\r\n      return { color: 'green' }; // Green for credit transactions\r\n    } else if (transaction.fromAccountId) {\r\n      return { color: 'blue' }; // Blue for debit transactions\r\n    }\r\n    return {};\r\n  };\r\n\r\n  const renderTransaction = (transaction) => {\r\n    return (\r\n      <div key={transaction.transactionId} style={getTransactionStyle(transaction)} className=\"transaction-item\">\r\n        <div className=\"transaction-details\">\r\n          <div>{new Date(transaction.time).toLocaleDateString()}</div>\r\n          <div>{transaction.remark}</div>\r\n        </div>\r\n        <div>{transaction.mode}</div>\r\n        <div>{transaction.amount.toLocaleString(undefined, { style: 'currency', currency: 'INR' })}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const allTransactions = [\r\n    ...transactions.creditTransactions,\r\n    ...transactions.debitTransactions,\r\n    ...transactions.selfTransactions,\r\n    ...transactions.failedTransactions,\r\n  ];\r\n\r\n  return (\r\n    <div className=\"transaction-container\">\r\n      <h2>Transactions</h2>\r\n      {allTransactions.sort((a, b) => new Date(b.time) - new Date(a.time)).map(renderTransaction)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionDisplay;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAC/C,MAAMC,mBAAmB,GAAIC,WAAW,IAAK;IAC3C,IAAIA,WAAW,CAACC,MAAM,KAAK,QAAQ,EAAE;MACnC,OAAO;QAAEC,KAAK,EAAE;MAAM,CAAC,CAAC,CAAC;IAC3B,CAAC,MAAM,IAAIF,WAAW,CAACG,WAAW,EAAE;MAClC,OAAO;QAAED,KAAK,EAAE;MAAQ,CAAC,CAAC,CAAC;IAC7B,CAAC,MAAM,IAAIF,WAAW,CAACI,aAAa,EAAE;MACpC,OAAO;QAAEF,KAAK,EAAE;MAAO,CAAC,CAAC,CAAC;IAC5B;IACA,OAAO,CAAC,CAAC;EACX,CAAC;EAED,MAAMG,iBAAiB,GAAIL,WAAW,IAAK;IACzC,oBACEJ,OAAA;MAAqCU,KAAK,EAAEP,mBAAmB,CAACC,WAAW,CAAE;MAACO,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBACxGZ,OAAA;QAAKW,SAAS,EAAC,qBAAqB;QAAAC,QAAA,gBAClCZ,OAAA;UAAAY,QAAA,EAAM,IAAIC,IAAI,CAACT,WAAW,CAACU,IAAI,CAAC,CAACC,kBAAkB,CAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC5DnB,OAAA;UAAAY,QAAA,EAAMR,WAAW,CAACgB;QAAM;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACNnB,OAAA;QAAAY,QAAA,EAAMR,WAAW,CAACiB;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC7BnB,OAAA;QAAAY,QAAA,EAAMR,WAAW,CAACkB,MAAM,CAACC,cAAc,CAACC,SAAS,EAAE;UAAEd,KAAK,EAAE,UAAU;UAAEe,QAAQ,EAAE;QAAM,CAAC;MAAC;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,GANzFf,WAAW,CAACsB,aAAa;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAO9B,CAAC;EAEV,CAAC;EAED,MAAMQ,eAAe,GAAG,CACtB,GAAGzB,YAAY,CAAC0B,kBAAkB,EAClC,GAAG1B,YAAY,CAAC2B,iBAAiB,EACjC,GAAG3B,YAAY,CAAC4B,gBAAgB,EAChC,GAAG5B,YAAY,CAAC6B,kBAAkB,CACnC;EAED,oBACE/B,OAAA;IAAKW,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCZ,OAAA;MAAAY,QAAA,EAAI;IAAY;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBQ,eAAe,CAACK,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIrB,IAAI,CAACqB,CAAC,CAACpB,IAAI,CAAC,GAAG,IAAID,IAAI,CAACoB,CAAC,CAACnB,IAAI,CAAC,CAAC,CAACqB,GAAG,CAAC1B,iBAAiB,CAAC;EAAA;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxF,CAAC;AAEV,CAAC;AAACiB,EAAA,GAtCInC,kBAAkB;AAwCxB,eAAeA,kBAAkB;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}