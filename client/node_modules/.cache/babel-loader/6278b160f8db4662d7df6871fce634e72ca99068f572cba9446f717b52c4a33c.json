{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u9280\\u884C\\\\client\\\\src\\\\admin-panel\\\\accounts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./accounts.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Accounts() {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const [selectedAccountId, setSelectedAccountId] = useState(null);\n  const [userDetails, setUserDetails] = useState(null);\n\n  // Fetch all accounts on component mount\n  useEffect(() => {\n    const fetchAccounts = async () => {\n      try {\n        const response = await fetch(\"http://localhost:7000/api/getAllAccounts\");\n        const data = await response.json();\n        setAccounts(data);\n      } catch (error) {\n        console.error(\"Error fetching accounts:\", error);\n      }\n    };\n    fetchAccounts();\n  }, []);\n\n  // Fetch user details when account is selected\n  const handleDetailsClick = async (userId, accountId) => {\n    try {\n      const response = await fetch(`http://localhost:7000/api/getUser/${userId}`);\n      const data = await response.json();\n      setUserDetails(data);\n      setSelectedAccountId(accountId); // Set the selected account ID\n    } catch (error) {\n      console.error(\"Error fetching user details:\", error);\n    }\n  };\n\n  // Handle account closure\n  const handleCloseAccount = async accountId => {\n    try {\n      const response = await fetch(`http://localhost:7000/api/closeAccount/${accountId}`, {\n        method: \"DELETE\"\n      });\n      if (response.ok) {\n        alert(\"Account closed successfully\");\n        setAccounts(accounts.filter(account => account.accountId !== accountId));\n      } else {\n        alert(\"Failed to close account\");\n      }\n    } catch (error) {\n      console.error(\"Error closing account:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"accounts-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accounts-list\",\n      children: accounts.map(account => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Account No:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this), \" XXXX XXXX \", account.accountId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDetailsClick(account.userId, account.accountId),\n              children: \"i\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"close-btn\",\n              onClick: () => handleCloseAccount(account.accountId),\n              children: \"Close Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Balance:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this), \" \\u20B9 \", account.balance, \".00\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), selectedAccountId === account.accountId && userDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 37\n            }, this), \" \", userDetails.firstName, \" \", userDetails.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 37\n            }, this), \" \", userDetails.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Date of Birth:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 37\n            }, this), \" \", new Date(userDetails.DOB).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedAccountId(null),\n            style: {\n              fontWeight: \"bold\"\n            },\n            children: \" X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }, this)]\n      }, account.accountId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(Accounts, \"yjXnUDQfCQadyIhUzTq/+ZfHapQ=\");\n_c = Accounts;\nexport default Accounts;\nvar _c;\n$RefreshReg$(_c, \"Accounts\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Accounts","_s","accounts","setAccounts","selectedAccountId","setSelectedAccountId","userDetails","setUserDetails","fetchAccounts","response","fetch","data","json","error","console","handleDetailsClick","userId","accountId","handleCloseAccount","method","ok","alert","filter","account","className","children","map","fileName","_jsxFileName","lineNumber","columnNumber","onClick","balance","firstName","lastName","email","Date","DOB","toLocaleDateString","style","fontWeight","_c","$RefreshReg$"],"sources":["D:/銀行/client/src/admin-panel/accounts.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./accounts.css\";\r\n\r\nfunction Accounts() {\r\n    const [accounts, setAccounts] = useState([]);\r\n    const [selectedAccountId, setSelectedAccountId] = useState(null);\r\n    const [userDetails, setUserDetails] = useState(null);\r\n\r\n    // Fetch all accounts on component mount\r\n    useEffect(() => {\r\n        const fetchAccounts = async () => {\r\n            try {\r\n                const response = await fetch(\r\n                    \"http://localhost:7000/api/getAllAccounts\"\r\n                );\r\n                const data = await response.json();\r\n                setAccounts(data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching accounts:\", error);\r\n            }\r\n        };\r\n\r\n        fetchAccounts();\r\n    }, []);\r\n\r\n    // Fetch user details when account is selected\r\n    const handleDetailsClick = async (userId, accountId) => {\r\n        try {\r\n            const response = await fetch(\r\n                `http://localhost:7000/api/getUser/${userId}`\r\n            );\r\n            const data = await response.json();\r\n            setUserDetails(data);\r\n            setSelectedAccountId(accountId); // Set the selected account ID\r\n        } catch (error) {\r\n            console.error(\"Error fetching user details:\", error);\r\n        }\r\n    };\r\n\r\n    // Handle account closure\r\n    const handleCloseAccount = async (accountId) => {\r\n        try {\r\n            const response = await fetch(\r\n                `http://localhost:7000/api/closeAccount/${accountId}`,\r\n                { method: \"DELETE\" }\r\n            );\r\n\r\n            if (response.ok) {\r\n                alert(\"Account closed successfully\");\r\n                setAccounts(\r\n                    accounts.filter((account) => account.accountId !== accountId)\r\n                );\r\n            } else {\r\n                alert(\"Failed to close account\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error closing account:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"accounts-container\">\r\n            <div className=\"accounts-list\">\r\n                {accounts.map((account) => (\r\n                    <div className=\"account-card\" key={account.accountId}>\r\n                        <div className=\"account-info\">\r\n                            <p>\r\n                                <strong>Account No:</strong> XXXX XXXX {account.accountId}\r\n                            </p>\r\n                            <div className=\"action-buttons\">\r\n                                <button\r\n                                    onClick={() =>\r\n                                        handleDetailsClick(account.userId, account.accountId)\r\n                                    }\r\n                                >\r\n                                    i\r\n                                </button>\r\n                                <button\r\n                                    className=\"close-btn\"\r\n                                    onClick={() => handleCloseAccount(account.accountId)}\r\n                                >\r\n                                    Close Account\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <p>\r\n                            <strong>Balance:</strong> ₹ {account.balance}.00\r\n                        </p>\r\n\r\n                        {selectedAccountId === account.accountId && userDetails && (\r\n                            <div className=\"user-details\">\r\n                                <p>\r\n                                    <strong>Name:</strong> {userDetails.firstName}{\" \"}\r\n                                    {userDetails.lastName}\r\n                                </p>\r\n                                <p>\r\n                                    <strong>Email:</strong> {userDetails.email}\r\n                                </p>\r\n                                <p>\r\n                                    <strong>Date of Birth:</strong>{\" \"}\r\n                                    {new Date(userDetails.DOB).toLocaleDateString()}\r\n                                </p>\r\n                                <button\r\n                                    onClick={() => setSelectedAccountId(null)}\r\n                                    style={{ fontWeight: \"bold\" }}\r\n                                > X\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Accounts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}