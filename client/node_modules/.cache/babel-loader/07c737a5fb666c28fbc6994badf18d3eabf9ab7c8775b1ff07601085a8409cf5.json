{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u9280\\u884C\\\\client\\\\src\\\\admin-panel\\\\users.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./users.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Users() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedAccType, setSelectedAccType] = useState({});\n\n  // Fetch all users on component mount\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await fetch(\"http://localhost:7000/api/getAllUsers\", met);\n        const data = await response.json();\n        setUsers(data);\n        console.log(data);\n      } catch (error) {\n        console.error(\"Error fetching users:\", error);\n      }\n    };\n    fetchUsers();\n  }, []);\n\n  // Handle account creation\n  const handleCreateAccount = async userId => {\n    const accType = selectedAccType[userId];\n    if (!accType) {\n      alert(\"Please select an account type\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:7000/api/createAccount`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userId,\n          accType\n        })\n      });\n      if (response.ok) {\n        alert(\"Account created successfully\");\n        // Optionally, update the UI after account creation\n      } else {\n        alert(\"Failed to create account\");\n      }\n    } catch (error) {\n      console.error(\"Error creating account:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"users-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users-list\",\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), \" \", user.firstName, \" \", user.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this), \" \", user.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Date of Birth:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this), \" \", new Date(user.DOB).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Address:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this), \" \", user.address]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account-type\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `accType-${user.userId}`,\n              children: \"Select Account Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: `accType-${user.userId}`,\n              value: selectedAccType[user.userId] || \"\",\n              onChange: e => setSelectedAccType({\n                ...selectedAccType,\n                [user.userId]: e.target.value\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"SAVINGS\",\n                children: \"Savings\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"CURRENT\",\n                children: \"Current\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCreateAccount(user.userId),\n            children: \"Create Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, user.userId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(Users, \"RcJXw+OBItmC7g8fYcg7SKmTy04=\");\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Users","_s","users","setUsers","selectedAccType","setSelectedAccType","fetchUsers","response","fetch","met","data","json","console","log","error","handleCreateAccount","userId","accType","alert","method","headers","body","JSON","stringify","ok","className","children","map","user","fileName","_jsxFileName","lineNumber","columnNumber","firstName","lastName","email","Date","DOB","toLocaleDateString","address","htmlFor","id","value","onChange","e","target","disabled","onClick","_c","$RefreshReg$"],"sources":["D:/銀行/client/src/admin-panel/users.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./users.css\";\r\n\r\nfunction Users() {\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedAccType, setSelectedAccType] = useState({});\r\n  \r\n  // Fetch all users on component mount\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:7000/api/getAllUsers\", met);\r\n        const data = await response.json();\r\n        setUsers(data);\r\n        console.log(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching users:\", error);\r\n      }\r\n    };\r\n\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  // Handle account creation\r\n  const handleCreateAccount = async (userId) => {\r\n    const accType = selectedAccType[userId];\r\n    if (!accType) {\r\n      alert(\"Please select an account type\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:7000/api/createAccount`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ userId, accType }),\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        alert(\"Account created successfully\");\r\n        // Optionally, update the UI after account creation\r\n      } else {\r\n        alert(\"Failed to create account\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error creating account:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"users-container\">\r\n      <div className=\"users-list\">\r\n        {users.map((user) => (\r\n          <div className=\"user-card\" key={user.userId}>\r\n            {/* First and Last Name */}\r\n            <div className=\"user-info\">\r\n              <p>\r\n                <strong>Name:</strong> {user.firstName} {user.lastName}\r\n              </p>\r\n              {/* Email, DOB, and Address */}\r\n              <div className=\"user-details\">\r\n                <p>\r\n                  <strong>Email:</strong> {user.email}\r\n                </p>\r\n                <p>\r\n                  <strong>Date of Birth:</strong>{\" \"}\r\n                  {new Date(user.DOB).toLocaleDateString()}\r\n                </p>\r\n                <p>\r\n                  <strong>Address:</strong> {user.address}\r\n                </p>\r\n              </div>\r\n              {/* Dropdown to Select Account Type */}\r\n              <div className=\"account-type\">\r\n                <label htmlFor={`accType-${user.userId}`}>\r\n                  Select Account Type:\r\n                </label>\r\n                <select\r\n                  id={`accType-${user.userId}`}\r\n                  value={selectedAccType[user.userId] || \"\"}\r\n                  onChange={(e) =>\r\n                    setSelectedAccType({\r\n                      ...selectedAccType,\r\n                      [user.userId]: e.target.value,\r\n                    })\r\n                  }\r\n                >\r\n                  <option value=\"\" disabled>\r\n                    Select\r\n                  </option>\r\n                  <option value=\"SAVINGS\">Savings</option>\r\n                  <option value=\"CURRENT\">Current</option>\r\n                </select>\r\n              </div>\r\n              {/* Button to Create Account */}\r\n              <button onClick={() => handleCreateAccount(user.userId)}>\r\n                Create Account\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}