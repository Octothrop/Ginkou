{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u9280\\u884C\\\\client\\\\src\\\\user-panel\\\\transaction.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './transaction.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionDisplay() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const userId = 3; // Assume this is the current user ID\n\n  // Fetch transactions for the user\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      try {\n        const response = await fetch('http://localhost:7000/api/payment.ginkou.in/allTransaction/2');\n        const data = await response.json();\n        setTransactions(data);\n      } catch (error) {\n        console.error('Error fetching transactions:', error);\n      }\n    };\n    fetchTransactions();\n  }, []);\n\n  // Fetch accounts for the user\n  useEffect(() => {\n    const fetchAccounts = async () => {\n      try {\n        const response = await fetch(`http://localhost:7000/api/getAll/${userId}`);\n        const data = await response.json();\n        setAccounts(data);\n      } catch (error) {\n        console.error('Error fetching accounts:', error);\n      }\n    };\n    fetchAccounts();\n  }, [userId]);\n  const isCredit = transaction => {\n    return accounts.some(account => account.accountId === transaction.toAccountId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transaction-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transaction-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), transactions.map(transaction => {\n      const transactionType = isCredit(transaction) ? 'credit' : 'debit';\n      console.log(`Transaction ${transaction.transactionId} is ${transactionType}`);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `transaction-item ${transactionType}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transaction-date\",\n            children: new Date(transaction.time).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transaction-remark\",\n            children: transaction.remark\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transaction-type\",\n          children: transaction.mode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: transaction.amount.toLocaleString(undefined, {\n            style: 'currency',\n            currency: 'INR'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, transaction.transactionId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(TransactionDisplay, \"h2IXjIobtyxolOn0JTj3/5CyJmg=\");\n_c = TransactionDisplay;\nexport default TransactionDisplay;\nvar _c;\n$RefreshReg$(_c, \"TransactionDisplay\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TransactionDisplay","_s","transactions","setTransactions","accounts","setAccounts","userId","fetchTransactions","response","fetch","data","json","error","console","fetchAccounts","isCredit","transaction","some","account","accountId","toAccountId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","transactionType","log","transactionId","Date","time","toLocaleDateString","remark","mode","amount","toLocaleString","undefined","style","currency","_c","$RefreshReg$"],"sources":["D:/銀行/client/src/user-panel/transaction.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './transaction.css';\r\n\r\nfunction TransactionDisplay() {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [accounts, setAccounts] = useState([]);\r\n  const userId = 3; // Assume this is the current user ID\r\n\r\n  // Fetch transactions for the user\r\n  useEffect(() => {\r\n    const fetchTransactions = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:7000/api/payment.ginkou.in/allTransaction/2');\r\n        const data = await response.json();\r\n        setTransactions(data);\r\n      } catch (error) {\r\n        console.error('Error fetching transactions:', error);\r\n      }\r\n    };\r\n\r\n    fetchTransactions();\r\n  }, []);\r\n\r\n  // Fetch accounts for the user\r\n  useEffect(() => {\r\n    const fetchAccounts = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:7000/api/getAll/${userId}`);\r\n        const data = await response.json();\r\n        setAccounts(data);\r\n      } catch (error) {\r\n        console.error('Error fetching accounts:', error);\r\n      }\r\n    };\r\n\r\n    fetchAccounts();\r\n  }, [userId]);\r\n\r\n  const isCredit = (transaction) => {\r\n    return accounts.some(account => account.accountId === transaction.toAccountId);\r\n  };\r\n\r\n  return (\r\n    <div className=\"transaction-container\">\r\n      <div className=\"transaction-header\">\r\n        <span>Date</span>\r\n        <span>Type</span>\r\n        <span>Amount</span>\r\n      </div>\r\n      {transactions.map((transaction) => {\r\n        const transactionType = isCredit(transaction) ? 'credit' : 'debit' ;\r\n        console.log(`Transaction ${transaction.transactionId} is ${transactionType}`);\r\n\r\n        return (\r\n          <div className={`transaction-item ${transactionType}`} key={transaction.transactionId}>\r\n            <div>\r\n              <div className=\"transaction-date\">\r\n                {new Date(transaction.time).toLocaleDateString()}\r\n              </div>\r\n              <div className=\"transaction-remark\">{transaction.remark}</div>\r\n            </div>\r\n            <div className=\"transaction-type\">{transaction.mode}</div>\r\n            <div>\r\n              {transaction.amount.toLocaleString(undefined, { style: 'currency', currency: 'INR' })}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransactionDisplay;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMU,MAAM,GAAG,CAAC,CAAC,CAAC;;EAElB;EACAT,SAAS,CAAC,MAAM;IACd,MAAMU,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8DAA8D,CAAC;QAC5F,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCR,eAAe,CAACO,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAEDL,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAV,SAAS,CAAC,MAAM;IACd,MAAMiB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoCH,MAAM,EAAE,CAAC;QAC1E,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCN,WAAW,CAACK,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDE,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC;EAEZ,MAAMS,QAAQ,GAAIC,WAAW,IAAK;IAChC,OAAOZ,QAAQ,CAACa,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,SAAS,KAAKH,WAAW,CAACI,WAAW,CAAC;EAChF,CAAC;EAED,oBACErB,OAAA;IAAKsB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCvB,OAAA;MAAKsB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjCvB,OAAA;QAAAuB,QAAA,EAAM;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACjB3B,OAAA;QAAAuB,QAAA,EAAM;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACjB3B,OAAA;QAAAuB,QAAA,EAAM;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,EACLxB,YAAY,CAACyB,GAAG,CAAEX,WAAW,IAAK;MACjC,MAAMY,eAAe,GAAGb,QAAQ,CAACC,WAAW,CAAC,GAAG,QAAQ,GAAG,OAAO;MAClEH,OAAO,CAACgB,GAAG,CAAC,eAAeb,WAAW,CAACc,aAAa,OAAOF,eAAe,EAAE,CAAC;MAE7E,oBACE7B,OAAA;QAAKsB,SAAS,EAAE,oBAAoBO,eAAe,EAAG;QAAAN,QAAA,gBACpDvB,OAAA;UAAAuB,QAAA,gBACEvB,OAAA;YAAKsB,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAC9B,IAAIS,IAAI,CAACf,WAAW,CAACgB,IAAI,CAAC,CAACC,kBAAkB,CAAC;UAAC;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C,CAAC,eACN3B,OAAA;YAAKsB,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAAEN,WAAW,CAACkB;UAAM;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CAAC,eACN3B,OAAA;UAAKsB,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAAEN,WAAW,CAACmB;QAAI;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC1D3B,OAAA;UAAAuB,QAAA,EACGN,WAAW,CAACoB,MAAM,CAACC,cAAc,CAACC,SAAS,EAAE;YAAEC,KAAK,EAAE,UAAU;YAAEC,QAAQ,EAAE;UAAM,CAAC;QAAC;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClF,CAAC;MAAA,GAVoDV,WAAW,CAACc,aAAa;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWhF,CAAC;IAEV,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACzB,EAAA,CAnEQD,kBAAkB;AAAAyC,EAAA,GAAlBzC,kBAAkB;AAqE3B,eAAeA,kBAAkB;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}