{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u9280\\u884C\\\\client\\\\src\\\\user-panel\\\\transaction.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './transaction.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionDisplay() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [accounts, setAccounts] = useState([]);\n  const userId = 3;\n  useEffect(() => {\n    fetch('http://localhost:7000/api/payment.ginkou.in/allTransaction/3').then(response => response.json()).then(data => setTransactions(data)).catch(error => console.error('Error fetching transactions:', error));\n  }, []);\n\n  // Fetch accounts for the user\n  useEffect(() => {\n    fetch(`http://localhost:7000/api/getAll/${userId}`) // Get all accounts for the current user\n    .then(response => response.json()).then(data => setAccounts(data)).catch(error => console.error('Error fetching accounts:', error));\n  }, [userId]);\n  const isCredit = transaction => {\n    // Check if the transaction's toAccountId matches any of the user's account IDs\n    return accounts.some(account => account.accountId === transaction.toAccountId);\n  };\n  const isDebit = transaction => {\n    // Check if the transaction's fromAccountId matches any of the user's account IDs\n    return accounts.some(account => account.accountId === transaction.fromAccountId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transaction-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transaction-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `transaction-item ${isCredit(transaction) ? 'credit' : isDebit(transaction) ? 'debit' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transaction-date\",\n          children: new Date(transaction.time).toLocaleDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transaction-remark\",\n          children: transaction.remark\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transaction-type\",\n        children: transaction.mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: transaction.amount.toLocaleString(undefined, {\n          style: 'currency',\n          currency: 'INR'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, transaction.transactionId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(TransactionDisplay, \"h2IXjIobtyxolOn0JTj3/5CyJmg=\");\n_c = TransactionDisplay;\nexport default TransactionDisplay;\nvar _c;\n$RefreshReg$(_c, \"TransactionDisplay\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TransactionDisplay","_s","transactions","setTransactions","accounts","setAccounts","userId","fetch","then","response","json","data","catch","error","console","isCredit","transaction","some","account","accountId","toAccountId","isDebit","fromAccountId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","Date","time","toLocaleDateString","remark","mode","amount","toLocaleString","undefined","style","currency","transactionId","_c","$RefreshReg$"],"sources":["D:/銀行/client/src/user-panel/transaction.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './transaction.css'\r\n\r\nfunction TransactionDisplay() {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [accounts, setAccounts] = useState([]);\r\n  const userId = 3;\r\n\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:7000/api/payment.ginkou.in/allTransaction/3')\r\n      .then(response => response.json())\r\n      .then(data => setTransactions(data))\r\n      .catch(error => console.error('Error fetching transactions:', error));\r\n  }, []);\r\n\r\n  // Fetch accounts for the user\r\n  useEffect(() => {\r\n    fetch(`http://localhost:7000/api/getAll/${userId}`) // Get all accounts for the current user\r\n      .then(response => response.json())\r\n      .then(data => setAccounts(data))\r\n      .catch(error => console.error('Error fetching accounts:', error));\r\n  }, [userId]);\r\n\r\n  const isCredit = (transaction) => {\r\n    // Check if the transaction's toAccountId matches any of the user's account IDs\r\n    return accounts.some(account => account.accountId === transaction.toAccountId);\r\n  };\r\n\r\n  const isDebit = (transaction) => {\r\n    // Check if the transaction's fromAccountId matches any of the user's account IDs\r\n    return accounts.some(account => account.accountId === transaction.fromAccountId);\r\n  };\r\n\r\n  return (\r\n    <div className=\"transaction-container\">\r\n      <div className=\"transaction-header\">\r\n        <span>Date</span>\r\n        <span>Type</span>\r\n        <span>Amount</span>\r\n      </div>\r\n      {transactions.map((transaction) => (\r\n        <div \r\n          className={`transaction-item ${isCredit(transaction) ? 'credit' : isDebit(transaction) ? 'debit' : ''}`}\r\n          key={transaction.transactionId}\r\n        >\r\n          <div>\r\n            <div className=\"transaction-date\">\r\n              {new Date(transaction.time).toLocaleDateString()}\r\n            </div>\r\n            <div className=\"transaction-remark\">{transaction.remark}</div>\r\n          </div>\r\n          <div className=\"transaction-type\">{transaction.mode}</div>\r\n          <div>\r\n            {transaction.amount.toLocaleString(undefined, { style: 'currency', currency: 'INR' })}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransactionDisplay;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}