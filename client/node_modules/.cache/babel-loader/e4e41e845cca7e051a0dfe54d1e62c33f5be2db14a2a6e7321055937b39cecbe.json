{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u9280\\u884C\\\\client\\\\src\\\\admin-panel\\\\users.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./users.css\";\nimport Footer from \"../header-footer/footer\";\nimport AdminHeader from \"../header-footer/admin-header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Users() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedAccType, setSelectedAccType] = useState({});\n  const [avl, setAvl] = useState(false);\n  useEffect(() => {\n    setAvl(false);\n    const fetchUsers = async () => {\n      try {\n        const response = await fetch(\"http://localhost:7000/api/findAllUsers\", {\n          method: \"GET\"\n        });\n        const data = await response.json();\n        setUsers(data);\n        console.log(data);\n      } catch (error) {\n        console.error(\"Error fetching users:\", error);\n      }\n    };\n    fetchUsers();\n  }, []);\n  const handleCreateAccount = async userId => {\n    const accType = selectedAccType[userId];\n    if (!accType) {\n      alert(\"Please select an account type\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:7000/api/newAccount/${userId}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userId,\n          accType\n        })\n      });\n      if (response.ok) {\n        alert(\"Account created successfully\");\n      } else {\n        alert(\"Failed to create account\");\n      }\n    } catch (error) {\n      console.error(\"Error creating account:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-main\",\n    children: [/*#__PURE__*/_jsxDEV(AdminHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"users-list\",\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this), \" \", user.firstName, \" \", user.lastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Email:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, this), \" \", user.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Date of Birth:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 19\n                }, this), \" \", new Date(user.DOB).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Address:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 19\n                }, this), \" \", user.address]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"account-type\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `accType-${user.userId}`,\n                children: \"Select Account Type:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: `accType-${user.userId}`,\n                value: selectedAccType[user.userId] || \"\",\n                onChange: e => setSelectedAccType({\n                  ...selectedAccType,\n                  [user.userId]: e.target.value\n                }),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  disabled: true,\n                  children: \"Select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"SAVINGS\",\n                  children: \"Savings\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"CURRENT\",\n                  children: \"Current\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleCreateAccount(user.userId),\n                children: \"Create Account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, user.userId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Users, \"dVYAfM9XDTXQFW5MYY3KVhmEP3Y=\");\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useState","useEffect","Footer","AdminHeader","jsxDEV","_jsxDEV","Users","_s","users","setUsers","selectedAccType","setSelectedAccType","avl","setAvl","fetchUsers","response","fetch","method","data","json","console","log","error","handleCreateAccount","userId","accType","alert","headers","body","JSON","stringify","ok","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","firstName","lastName","email","Date","DOB","toLocaleDateString","address","htmlFor","id","value","onChange","e","target","disabled","onClick","_c","$RefreshReg$"],"sources":["D:/銀行/client/src/admin-panel/users.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./users.css\";\r\nimport Footer from \"../header-footer/footer\";\r\nimport AdminHeader from \"../header-footer/admin-header\";\r\n\r\nfunction Users() {\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedAccType, setSelectedAccType] = useState({});\r\n  const [avl, setAvl] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setAvl(false)\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:7000/api/findAllUsers\", {\r\n          method: \"GET\",\r\n        });\r\n        const data = await response.json();\r\n        setUsers(data);\r\n        console.log(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching users:\", error);\r\n      }\r\n    };\r\n\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const handleCreateAccount = async (userId) => {\r\n    const accType = selectedAccType[userId];\r\n    if (!accType) {\r\n      alert(\"Please select an account type\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:7000/api/newAccount/${userId}`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ userId, accType }),\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        alert(\"Account created successfully\");\r\n      } else {\r\n        alert(\"Failed to create account\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error creating account:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-main\">\r\n      <AdminHeader />\r\n    <div className=\"users-container\">\r\n      <div className=\"users-list\">\r\n        {users.map((user) => (\r\n          <div className=\"user-card\" key={user.userId}>\r\n            <div className=\"user-info\">\r\n              <p>\r\n                <strong>Name:</strong> {user.firstName} {user.lastName}\r\n              </p>\r\n              <div className=\"user-details\">\r\n                <p>\r\n                  <strong>Email:</strong> {user.email}\r\n                </p>\r\n                <p>\r\n                  <strong>Date of Birth:</strong>{\" \"}\r\n                  {new Date(user.DOB).toLocaleDateString()}\r\n                </p>\r\n                <p>\r\n                  <strong>Address:</strong> {user.address}\r\n                </p>\r\n              </div>\r\n              <div className=\"account-type\">\r\n                <label htmlFor={`accType-${user.userId}`}>\r\n                  Select Account Type:\r\n                </label>\r\n                <select\r\n                  id={`accType-${user.userId}`}\r\n                  value={selectedAccType[user.userId] || \"\"}\r\n                  onChange={(e) =>\r\n                    setSelectedAccType({\r\n                      ...selectedAccType,\r\n                      [user.userId]: e.target.value,\r\n                    })\r\n                  }\r\n                >\r\n                  <option value=\"\" disabled>\r\n                    Select\r\n                  </option>\r\n                  <option value=\"SAVINGS\">Savings</option>\r\n                  <option value=\"CURRENT\">Current</option>\r\n                </select>\r\n                <button onClick={() => handleCreateAccount(user.userId)}>\r\n                  Create Account\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n    <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}