{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u9280\\u884C\\\\client\\\\src\\\\user-panel\\\\transaction.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './transaction.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionDisplay() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const userId = 2; // Assume this is the current user ID\n\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      try {\n        const response = await fetch(`http://localhost:7000/api/payment.ginkou.in/allTransaction/${userId}`);\n        const data = await response.json();\n        const combinedTransactions = [...data.creditTransactions.map(transaction => ({\n          ...transaction,\n          type: 'credit'\n        })), ...data.debitTransactions.map(transaction => ({\n          ...transaction,\n          type: 'debit'\n        })), ...data.selfTransactions.map(transaction => ({\n          ...transaction,\n          type: 'self'\n        })), ...data.failedTransactions.map(transaction => ({\n          ...transaction,\n          type: 'failed'\n        }))].sort((a, b) => new Date(b.time) - new Date(a.time));\n        setTransactions(combinedTransactions);\n      } catch (error) {\n        console.error('Error fetching transactions:', error);\n      }\n    };\n    fetchTransactions();\n  }, [userId]);\n  const getTransactionStyle = transaction => {\n    if (transaction.type === 'failed') {\n      return {\n        color: 'red'\n      }; // Red for failed transactions\n    } else if (transaction.type === 'credit') {\n      return {\n        color: 'green'\n      }; // Green for credit transactions\n    } else if (transaction.type === 'debit') {\n      return {\n        color: 'blue'\n      }; // Blue for debit transactions\n    } else if (transaction.type === 'self') {\n      return {\n        color: 'orange'\n      }; // Orange for self transactions\n    }\n    return {};\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transaction-container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: getTransactionStyle(transaction),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(transaction.time).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"transaction-type\",\n            children: transaction.mode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.amount.toLocaleString(undefined, {\n              style: 'currency',\n              currency: 'INR'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, `${transaction.transactionId}-${transaction.type}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(TransactionDisplay, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n_c = TransactionDisplay;\nexport default TransactionDisplay;\nvar _c;\n$RefreshReg$(_c, \"TransactionDisplay\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TransactionDisplay","_s","transactions","setTransactions","userId","fetchTransactions","response","fetch","data","json","combinedTransactions","creditTransactions","map","transaction","type","debitTransactions","selfTransactions","failedTransactions","sort","a","b","Date","time","error","console","getTransactionStyle","color","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","toLocaleDateString","mode","amount","toLocaleString","undefined","currency","transactionId","_c","$RefreshReg$"],"sources":["D:/銀行/client/src/user-panel/transaction.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './transaction.css';\r\n\r\nfunction TransactionDisplay() {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const userId = 2; // Assume this is the current user ID\r\n\r\n  useEffect(() => {\r\n    const fetchTransactions = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:7000/api/payment.ginkou.in/allTransaction/${userId}`);\r\n        const data = await response.json();\r\n        \r\n        const combinedTransactions = [\r\n          ...data.creditTransactions.map(transaction => ({ ...transaction, type: 'credit' })),\r\n          ...data.debitTransactions.map(transaction => ({ ...transaction, type: 'debit' })),\r\n          ...data.selfTransactions.map(transaction => ({ ...transaction, type: 'self' })),\r\n          ...data.failedTransactions.map(transaction => ({ ...transaction, type: 'failed' }))\r\n        ].sort((a, b) => new Date(b.time) - new Date(a.time));\r\n\r\n        setTransactions(combinedTransactions);\r\n      } catch (error) {\r\n        console.error('Error fetching transactions:', error);\r\n      }\r\n    };\r\n\r\n    fetchTransactions();\r\n  }, [userId]);\r\n\r\n  const getTransactionStyle = (transaction) => {\r\n    if (transaction.type === 'failed') {\r\n      return { color: 'red' }; // Red for failed transactions\r\n    } else if (transaction.type === 'credit') {\r\n      return { color: 'green' }; // Green for credit transactions\r\n    } else if (transaction.type === 'debit') {\r\n      return { color: 'blue' }; // Blue for debit transactions\r\n    } else if (transaction.type === 'self') {\r\n      return { color: 'orange' }; // Orange for self transactions\r\n    }\r\n    return {};\r\n  };\r\n\r\n  return (\r\n    <div className=\"transaction-container\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Mode</th>\r\n            <th> Type</th> {/* New column for transaction type */}\r\n            <th>Amount</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {transactions.map((transaction) => (\r\n            <tr key={`${transaction.transactionId}-${transaction.type}`} style={getTransactionStyle(transaction)}>\r\n              <td>\r\n                {new Date(transaction.time).toLocaleDateString()}\r\n              </td>\r\n              <td className=\"transaction-type\">{transaction.mode}</td>\r\n              <td>{transaction.type}</td> {/* Displaying the transaction type */}\r\n              <td>\r\n                {transaction.amount.toLocaleString(undefined, { style: 'currency', currency: 'INR' })}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransactionDisplay;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}