{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u9280\\u884C\\\\client\\\\src\\\\admin-panel\\\\accounts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./accounts.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Accounts() {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const [selectedAccountId, setSelectedAccountId] = useState(null);\n  const [userDetails, setUserDetails] = useState(null);\n\n  // Fetch all accounts on component mount\n  useEffect(() => {\n    const fetchAccounts = async () => {\n      try {\n        const response = await fetch(\"http://localhost:7000/api/getAllAccounts\");\n        const data = await response.json();\n        setAccounts(data);\n      } catch (error) {\n        console.error(\"Error fetching accounts:\", error);\n      }\n    };\n    fetchAccounts();\n  }, []);\n\n  // Fetch user details when account is selected\n  const handleDetailsClick = async (userId, accountId) => {\n    try {\n      const response = await fetch(`http://localhost:7000/api/getUser/${userId}`);\n      const data = await response.json();\n      setUserDetails(data);\n      setSelectedAccountId(accountId); // Set the selected account ID\n    } catch (error) {\n      console.error(\"Error fetching user details:\", error);\n    }\n  };\n\n  // Handle account closure\n  const handleCloseAccount = async accountId => {\n    const confirmClose = window.confirm(\"Are you sure you want to close this account?\");\n    if (!confirmClose) return;\n    try {\n      const response = await fetch(`http://localhost:7000/api/closeAccount/${accountId}`, {\n        method: \"DELETE\"\n      });\n      if (response.ok) {\n        alert(\"Account closed successfully\");\n        setAccounts(accounts.filter(account => account.accountId !== accountId));\n      } else {\n        alert(\"Failed to close account\");\n      }\n    } catch (error) {\n      console.error(\"Error closing account:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"accounts-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accounts-list\",\n      children: accounts.map(account => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"account-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Account No:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), \" XXXX XXXX \", account.accountId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDetailsClick(account.userId, account.accountId),\n              children: \"i\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"close-btn\",\n              onClick: () => handleCloseAccount(account.accountId),\n              children: \"Close Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Balance:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), \" \\u20B9 \", account.balance, \".00\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), selectedAccountId === account.accountId && userDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-details-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this), \" \", userDetails.firstName, \" \", userDetails.lastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSelectedAccountId(null),\n              style: {\n                fontWeight: \"bold\",\n                alignSelf: 'flex-end'\n              },\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), \" \", userDetails.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Date of Birth:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), \" \", new Date(userDetails.DOB).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this)]\n      }, account.accountId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(Accounts, \"yjXnUDQfCQadyIhUzTq/+ZfHapQ=\");\n_c = Accounts;\nexport default Accounts;\nvar _c;\n$RefreshReg$(_c, \"Accounts\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Accounts","_s","accounts","setAccounts","selectedAccountId","setSelectedAccountId","userDetails","setUserDetails","fetchAccounts","response","fetch","data","json","error","console","handleDetailsClick","userId","accountId","handleCloseAccount","confirmClose","window","confirm","method","ok","alert","filter","account","className","children","map","fileName","_jsxFileName","lineNumber","columnNumber","onClick","balance","firstName","lastName","style","fontWeight","alignSelf","email","Date","DOB","toLocaleDateString","_c","$RefreshReg$"],"sources":["D:/銀行/client/src/admin-panel/accounts.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./accounts.css\";\r\n\r\nfunction Accounts() {\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [selectedAccountId, setSelectedAccountId] = useState(null);\r\n  const [userDetails, setUserDetails] = useState(null);\r\n\r\n  // Fetch all accounts on component mount\r\n  useEffect(() => {\r\n    const fetchAccounts = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"http://localhost:7000/api/getAllAccounts\"\r\n        );\r\n        const data = await response.json();\r\n        setAccounts(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching accounts:\", error);\r\n      }\r\n    };\r\n\r\n    fetchAccounts();\r\n  }, []);\r\n\r\n  // Fetch user details when account is selected\r\n  const handleDetailsClick = async (userId, accountId) => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:7000/api/getUser/${userId}`\r\n      );\r\n      const data = await response.json();\r\n      setUserDetails(data);\r\n      setSelectedAccountId(accountId); // Set the selected account ID\r\n    } catch (error) {\r\n      console.error(\"Error fetching user details:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle account closure\r\n  const handleCloseAccount = async (accountId) => {\r\n    const confirmClose = window.confirm(\"Are you sure you want to close this account?\");\r\n    if (!confirmClose) return;\r\n  \r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:7000/api/closeAccount/${accountId}`,\r\n        { method: \"DELETE\" }\r\n      );\r\n  \r\n      if (response.ok) {\r\n        alert(\"Account closed successfully\");\r\n        setAccounts(\r\n          accounts.filter((account) => account.accountId !== accountId)\r\n        );\r\n      } else {\r\n        alert(\"Failed to close account\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error closing account:\", error);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"accounts-container\">\r\n      <div className=\"accounts-list\">\r\n        {accounts.map((account) => (\r\n          <div className=\"account-card\" key={account.accountId}>\r\n            <div className=\"account-info\">\r\n              <p>\r\n                <strong>Account No:</strong> XXXX XXXX {account.accountId}\r\n              </p>\r\n              <div className=\"action-buttons\">\r\n                <button\r\n                  onClick={() =>\r\n                    handleDetailsClick(account.userId, account.accountId)\r\n                  }\r\n                >\r\n                  i\r\n                </button>\r\n                <button\r\n                  className=\"close-btn\"\r\n                  onClick={() => handleCloseAccount(account.accountId)}\r\n                >\r\n                  Close Account\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <p>\r\n              <strong>Balance:</strong> ₹ {account.balance}.00\r\n            </p>\r\n            {selectedAccountId === account.accountId && userDetails && (\r\n              <div className=\"user-details\">\r\n              <div className=\"user-details-header\">\r\n                <p>\r\n                  <strong>Name:</strong> {userDetails.firstName} {userDetails.lastName}\r\n                </p>\r\n                <button\r\n                  onClick={() => setSelectedAccountId(null)}\r\n                  style={{ fontWeight: \"bold\", alignSelf: 'flex-end' }}\r\n                >\r\n                  X\r\n                </button>\r\n              </div>\r\n              <p>\r\n                <strong>Email:</strong> {userDetails.email}\r\n              </p>\r\n              <p>\r\n                <strong>Date of Birth:</strong> {new Date(userDetails.DOB).toLocaleDateString()}\r\n              </p>\r\n            </div>\r\n            \r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Accounts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}